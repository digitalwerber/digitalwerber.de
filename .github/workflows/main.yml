# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - name: Setup Node.js environment
              uses: actions/setup-node@v1.4.2
              with:
                  # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
                  node-version: 12.13.0

            - name: Install Dependencies
              run: npm install --only=prod

            - name: Build React site
              run: npm run build

            - name: Test
              run: npm run test:ci

            - name: Upload Build Artifacts
              uses: actions/upload-artifact@v2
              with:
                  path: out/**
                  name: react-site

    deploy:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        needs: build

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - name: Download Build Artifacts
              uses: actions/download-artifact@v2
              with:
                  path: out/**
                  name: react-site

            - name: Publish
              uses: cloudflare/wrangler-action@1.1.0
              with:
                  apiToken: ${{ secrets.CF_API_TOKEN }}
              env:
                  CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
                  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
